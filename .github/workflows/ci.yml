name: Test Suite

on:
  push:
    branches:
      - main
      - develop
      - work
  pull_request:
  schedule:
    - cron: '0 5 * * *'

jobs:
  unit-tests:
    name: Unit & Feature Tests with Coverage Gate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, sqlite, fileinfo
          coverage: xdebug
          tools: composer

      - name: Validate composer cache
        uses: ramsey/composer-install@v3
        with:
          working-directory: backend

      - name: Copy environment
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Prepare sqlite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run tests with coverage gate
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
          MAIL_MAILER: array
        run: php artisan test --coverage --coverage-html=coverage --min=80

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-coverage
          path: backend/coverage
          if-no-files-found: ignore

  e2e-tests:
    name: Playwright End-to-End Suite
    runs-on: ubuntu-latest
    needs: unit-tests
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, sqlite, fileinfo
          tools: composer

      - name: Validate composer cache
        uses: ramsey/composer-install@v3
        with:
          working-directory: backend

      - name: Copy environment
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Prepare sqlite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run database migrations and seeders
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate:fresh --seed --class=Database\\Seeders\\E2EBugReportingSeeder

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Node dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Start Laravel server
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
          MAIL_MAILER: array
          AI_MOCKS_ENABLED: true
          APP_ENV: testing
          APP_URL: http://127.0.0.1:8000
        run: |
          php artisan serve --host=127.0.0.1 --port=8000 &
          php -r "$i=0; while($i < 30) { if (@fsockopen('127.0.0.1', 8000)) { exit(0); } sleep(1); $i++; } exit(1);"

      - name: Run Playwright tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
          MAIL_MAILER: array
          AI_MOCKS_ENABLED: true
          APP_ENV: testing
          APP_URL: http://127.0.0.1:8000
          E2E_BASE_URL: http://127.0.0.1:8000
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: backend/storage/app/playwright-report
          if-no-files-found: ignore
